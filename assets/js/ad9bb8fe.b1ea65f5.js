"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[565],{3905:(e,n,t)=>{t.d(n,{Zo:()=>h,kt:()=>s});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),g=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},h=function(e){var n=g(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),u=g(t),s=a,m=u["".concat(c,".").concat(s)]||u[s]||p[s]||i;return t?r.createElement(m,o(o({ref:n},h),{},{components:t})):r.createElement(m,o({ref:n},h))}));function s(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var g=2;g<i;g++)o[g]=t[g];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9421:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var r=t(7462),a=(t(7294),t(3905));const i={},o="Scanning",l={unversionedId:"book/scanning",id:"book/scanning",title:"Scanning",description:"* Introduction",source:"@site/../grox-docs/target/mdoc/book/3-scanning.md",sourceDirName:"book",slug:"/book/scanning",permalink:"/grox/docs/book/scanning",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/../grox-docs/target/mdoc/book/3-scanning.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"docs",previous:{title:"Map of the territory",permalink:"/grox/docs/book/map-of-the-territory"},next:{title:"Representing Code",permalink:"/grox/docs/book/representing-code"}},c={},g=[{value:"Introduction",id:"introduction",level:2},{value:"Lexemes and Tokens",id:"lexemes-and-tokens",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Regular language",id:"regular-language",level:2},{value:"Implementation",id:"implementation",level:3},{value:"Resources",id:"resources",level:2}],h={toc:g};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"scanning"},"Scanning"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#introduction"},"Introduction")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#lexemes-and-tokens"},"Lexemes and Tokens")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#error-handling"},"Error Handling")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#regular-language"},"Regular language")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#implementation"},"Implementation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#resources"},"Resources"))),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,'L\xe0 b\u01b0\u1edbc \u0111\u1ea7u ti\xean c\u1ee7a b\u1ea5t c\u1ee9 compiler ho\u1eb7c interpreter n\xe0o. Scanning hay c\xf2n \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 lexing ho\u1eb7c lexical analysis. M\u1ed9t scanner (ho\u1eb7c lexer) nh\u1eadn m\u1ed9t string v\xe0 chia nh\u1ecf n\xf3 th\xe0nh m\u1ed9t chu\u1ed7i c\u1ee7a token. Token c\xf3 th\u1ec3 coi nh\u01b0 "t\u1eeb" v\xe0 "d\u1ea5u c\xe2u" \u0111\u01b0\u1ee3c d\xf9ng \u0111\u1ec3 t\u1ea1o n\xean ng\u1eef ph\xe1p c\u1ee7a m\u1ed9t ng\xf4n ng\u1eef.'),(0,a.kt)("p",null,"Fun fact: ",(0,a.kt)("strong",{parentName:"p"},"Lexical")," comes from the Greek root ",(0,a.kt)("strong",{parentName:"p"},"lex"),", meaning ",(0,a.kt)("strong",{parentName:"p"},"word")),(0,a.kt)("h2",{id:"lexemes-and-tokens"},"Lexemes and Tokens"),(0,a.kt)("p",null,"\u0110\xe2y l\xe0 m\u1ed9t d\xf2ng code v\u1edbi ng\xf4n ng\u1eef Lox"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'var language = "lox";\n')),(0,a.kt)("p",null,"\u1ede \u0111\xe2y, ",(0,a.kt)("inlineCode",{parentName:"p"},"var")," l\xe0 t\u1eeb kho\xe1(keyword) \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a m\u1ed9t bi\u1ebfn(variable) m\u1edbi. Ba k\xfd t\u1ef1 ",(0,a.kt)("inlineCode",{parentName:"p"},"v-a-r")," c\xf3 m\u1ed9t \xfd ngh\u0129a nh\u1ea5t \u0111\u1ecbnh \u1edf \u0111\xe2y. V\xe0 \u0111\xf3 c\u0169ng l\xe0 nhi\u1ec7m v\u1ee5 ch\xednh c\u1ee7a scanner - duy\u1ec7t chu\u1ed7i k\xfd t\u1ef1 v\xe0 tr\u1ea3 nh\xf3m ch\xfang l\u1ea1i th\xe0nh nh\u1eefng t\u1eeb c\xf3 ngh\u0129a. M\u1ed7i m\u1ed9t nh\xf3m k\xfd t\u1ef1 n\xe0y \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t ",(0,a.kt)("inlineCode",{parentName:"p"},"lexeme"),". Lexeme t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\xe1c raw string trong source code. Lexeme c\xf3 th\u1ec3 ch\u1ec9 g\u1ed3m m\u1ed9t k\xfd t\u1ef1: ",(0,a.kt)("inlineCode",{parentName:"p"},"{"),", ",(0,a.kt)("inlineCode",{parentName:"p"},";")," ho\u1eb7c nhi\u1ec1u k\xfd t\u1ef1 nh\u01b0 number ",(0,a.kt)("inlineCode",{parentName:"p"},"123"),", string ",(0,a.kt)("inlineCode",{parentName:"p"},'"hi!"'),". T\u01b0\u01a1ng \u1ee9ng v\u1edbi v\xed d\u1ee5 b\xean tr\xean, lexeme s\u1ebd gi\u1ed1ng nh\u01b0 \u1ea3nh ph\xeda d\u01b0\u1edbi."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/A2NMsRL.png",alt:"lexeme"})),(0,a.kt)("p",null,"Trong source file c\xf3 nhi\u1ec1u k\xed t\u1ef1 kh\xf4ng mang nhi\u1ec1u \xfd ngh\u0129a nh\u01b0 whitespace ho\u1eb7c comment. Scanner th\xf4ng th\u01b0\u1eddng s\u1ebd b\u1ecf qua nh\u1eefng k\xfd t\u1ef1 n\xe0y."),(0,a.kt)("p",null,"Trong qu\xe1 tr\xecnh scanning, ngo\xe0i vi\u1ec7c nh\xf3m c\xe1c k\xfd t\u1ef1 th\xe0nh lexeme, th\xec scanner c\xf2n thu th\u1eadp th\xeam c\xe1c th\xf4ng tin h\u1eefu \xedch kh\xe1c. Ch\xfang ta g\u1ed9p lexeme v\xe0 nh\u1eefng th\xf4ng tin \u0111\xf3 l\u1ea1i th\xe0nh m\u1ed9t Token."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Token = lexeme + additional information")),(0,a.kt)("p",null,"C\xe1c th\xf4ng tin \u0111\xf3 c\xf3 th\u1ec3 bao g\u1ed3m:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Token type: Khi scanner nh\u1eadn ra m\u1ed9t lexeme th\xec n\xf3 s\u1ebd l\u01b0u l\u1ea1i ki\u1ec3u c\u1ee7a lexeme \u0111\xf3 lu\xf4n. Ch\xfang ta c\xf3 m\u1ed9t s\u1ed1 lo\u1ea1i token nh\u01b0 sau: Keyword, operator, literal (number/string/identifier)."),(0,a.kt)("li",{parentName:"ul"},"Literal value: gi\xe1 tr\u1ecb cho c\xe1c token c\xf3 ki\u1ec3u literal"),(0,a.kt)("li",{parentName:"ul"},"Location information: Vi\u1ec7c l\u01b0u l\u1ea1i v\u1ecb tr\xed c\u1ee7a m\u1ed7i lexeme trong m\u1ed7i token s\u1ebd gi\xfap ch\xfang ta c\xf3 kh\u1ea3 n\u0103ng hi\u1ec3n th\u1ecb cho ng\u01b0\u1eddi d\xf9ng v\u1ecb tr\xed c\u1ee7a l\u1ed7i n\u1ebfu x\u1ea3y ra.")),(0,a.kt)("h2",{id:"error-handling"},"Error Handling"),(0,a.kt)("p",null,"Scanner c\xf2n c\xf3 nhi\u1ec7m v\u1ee5 report l\u1ed7i cho ng\u01b0\u1eddi d\xf9ng. Th\xf4ng th\u01b0\u1eddng v\u1ea5n \u0111\u1ec1 n\xe0y hay b\u1ecb b\u1ecf qua tr\xean l\xfd thuy\u1ebft nh\u01b0ng r\u1ea5t quan tr\u1ecdng cho ng\u01b0\u1eddi d\xf9ng tr\xean th\u1ef1c t\u1ebf."),(0,a.kt)("h2",{id:"regular-language"},"Regular language"),(0,a.kt)("p",null,"M\u1ed7i ng\xf4n ng\u1eef l\u1eadp tr\xecnh \u0111\u1ec1u c\xf3 m\u1ed9t b\u1ed9 quy t\u1eafc (set of rule) ri\xeang \u0111\u1ec3 x\xe1c \u0111\u1ecbnh m\u1ed9t chu\u1ed7i k\xfd t\u1ef1 c\xf3 ph\u1ea3i l\xe0 m\u1ed9t lexeme h\u1ee3p l\u1ec7 hay kh\xf4ng? B\u1ed9 quy t\u1eafc \u0111\xf3 \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 lexical grammar. Lox language c\u0169ng nh\u01b0 \u0111a ph\u1ea7n c\xe1c ng\xf4n ng\u1eef l\u1eadp tr\xecnh kh\xe1c, ch\xfang ta c\xf3 th\u1ec3 d\xf9ng regular expression \u0111\u1ec3 nh\u1eadn ra t\u1ea5t c\u1ea3 c\xe1c lexeme h\u1ee3p l\u1ec7. C\xe1c ng\xf4n ng\u1eef n\xe0y \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 regular language. M\u1ed9t s\u1ed1 tool nh\u01b0 ",(0,a.kt)("a",{parentName:"p",href:"http://dinosaur.compilertools.net/lex/"},"Lex")," ho\u1eb7c ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/westes/flex"},"Flex")," c\xf3 th\u1ec3 generate scanner b\u1eb1ng regular expression."),(0,a.kt)("p",null,"Func fact: Lex was created by Mike Lesk and Eric Schmidt - who was executive chairman of Google."),(0,a.kt)("h3",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"\u0110\u1ee9ng tr\u01b0\u1edbc b\xe0i to\xe1n scanning/parsing th\xf4ng th\u01b0\u1eddng ch\xfang ta c\xf3 nh\u1eefng l\u1ef1a ch\u1ecdn nh\u01b0 sau:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Parser c\xf3 s\u1eb5n: d\xe0nh cho c\xe1c format ph\u1ed5 bi\u1ebfn nh\u01b0 Json, xml."),(0,a.kt)("li",{parentName:"ul"},"D\xf9ng ",(0,a.kt)("inlineCode",{parentName:"li"},"String.split"),": Th\u01b0\u1eddng ch\u1ec9 \u0111\u01b0\u1ee3c d\xf9ng cho nh\u1eefng tr\u01b0\u1eddng h\u1ee3p \u0111\u01a1n gi\u1ea3n."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Regular expression"),": \u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng khi kh\xf4ng c\u1ea7n k\u1ebft qu\u1ea3 ch\xednh x\xe1c 100%. Th\xf4ng th\u01b0\u1eddng c\xe1c parser s\u1eed d\u1ee5ng regex th\xec kh\xf4ng \u1ed5n \u0111\u1ecbnh, hay b\u1ecb l\u1ed7i (c\u1ea3 false positives v\xe0 false negatives)"),(0,a.kt)("li",{parentName:"ul"},"Parser generator: M\u1ed9t s\u1ed1 tool nh\u01b0 ",(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Yacc"},"Yacc")," hay ",(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/ANTLR"},"ANTLR")," c\xf3 th\u1ec3 generate source code c\u1ee7a parser d\u1ef1a v\xe0o lexical grammar. C\xe1i n\xe0y \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\xe3i nh\u01b0ng vi\u1ec7c set up kh\xe1 l\xe0 phi\u1ec1n to\xe1i."),(0,a.kt)("li",{parentName:"ul"},"Recursive descent parser (top down parser) style: parser ki\u1ec3u n\xe0y s\u1ebd duy\u1ec7t t\u1eeb string input t\u1eeb \u0111\u1ea7u \u0111\u1ebfn cu\u1ed1i, c\u1ed1 g\u1eafng \u0111o\xe1n xem chu\u1ed7i k\xfd t\u1ef1 hi\u1ec7n t\u1ea1i c\xf3 ph\u1ea3i token hay kh\xf4ng? N\u1ebfu \u0111\xfang th\xec chu\u1ed7i k\xfd t\u1ef1 \u0111\xf3 s\u1ebd \u0111\u01b0\u1ee3c th\xeam v\xe0o token list sau r\u1ed3i ti\u1ebfp t\u1ee5c qu\xe1 tr\xecnh \u0111\xf3 \u0111\u1ebfn khi g\u1eb7p EOF. \u0110\xe2y l\xe0 ph\u01b0\u01a1ng \xe1n m\xe0 ","[Crafting Interpreter]"," ch\u1ecdn \u0111\u1ec3 implement. C\xe1c b\u1ea1n c\xf3 th\u1ec3 xem source c\u1ee7a Scanner \u1edf ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/munificent/craftinginterpreters/blob/master/java/com/craftinginterpreters/lox/Scanner.java"},"\u0111\xe2y"),"."),(0,a.kt)("li",{parentName:"ul"},"Parser combinators: C\u0169ng l\xe0 m\u1ed9t d\u1ea1ng top down parser nh\u01b0ng \u0111\u01b0\u1ee3c ph\u1ed5 bi\u1ebfn trong gi\u1edbi functional programming. \u0110\xe2y c\u0169ng l\xe0 ph\u01b0\u01a1ng \xe1n m\xe0 nh\xf3m ch\u1ecdn \u0111\u1ec3 implement. M\u1ecdi ng\u01b0\u1eddi c\xf3 th\u1ec3 xem k\u1ef9 h\u01a1n v\u1ec1 n\xf3 \u1edf ",(0,a.kt)("a",{parentName:"li",href:"/grox/docs/fp/parser-combinators"},"\u0111\xe2y"))),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://craftinginterpreters.com/scanning.html"},"Scanning chapter")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.lihaoyi.com/post/EasyParsingwithParserCombinators.html"},"fastparser"))))}p.isMDXComponent=!0}}]);